name: Publish Package

on:
  push:
    branches:
      - 'master'  # You can change this to 'main' if you're using 'main' instead of 'master'

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Make sure to use the appropriate permissions for your needs

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.BOT_ACCESS_TOKEN }}  # Use the bot access token for GitHub actions

      - name: Setup Git
        run: |
          git config --global user.name "uilibrary"
          git config --global user.email "uilibrary.dev@gmail.com"

      - name: Specify Node Version
        uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: yarn

      - name: Create .npmrc file
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" > ~/.npmrc

      - name: Build packages with Lerna
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: yarn build

      - name: Publish packages with Lerna
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: npx lerna publish from-package --yes

      - name: Extract version and package name
        run: |
          VERSION=$(npm run version --silent)
          PACKAGE_NAME=$(npm run name --silent)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV

      - name: Post to Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.17.0
        with:
          payload: |
            {
              "attachments": [
                {
                  "color": "#70aeff",
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "Notification sent from <${{ env.PIPE_URL }}>"
                      }
                    },
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "${{ env.PACKAGE_NAME }}@${{ env.VERSION }} has been published successfully!"
                      }
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.WEB_SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      # Deployment on GitHub Pages
      - name: Build Storybook
        run: yarn build:storybook  # Ensure Storybook is being built

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # Use GitHub token for deploying
          publish_dir: ./storybook-static  # Directory to deploy
          enable_jekyll: false  # Disable Jekyll (unless you need it)
